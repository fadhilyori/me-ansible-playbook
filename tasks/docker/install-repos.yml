---
- name: Upgrade all packages
  become: true
  ansible.builtin.apt:
    name: "*"
    state: present
    update_cache: true

- name: Remove old version of Docker
  become: true
  ansible.builtin.apt:
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent
    autoremove: true

- name: Install required packages to setup repository
  become: true
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present

- name: Register Docker Official GPG key
  become: true
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/trusted.gpg.d/docker-ubuntu.asc
    mode: 0644
    force: true

- name: Add Docker Official repository
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_facts.distribution_release }} stable"
    filename: docker-ubuntu
    state: present
    update_cache: true

- name: Install Docker packages
  become: true
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: present

- name: Add the user current user to 'docker' group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_ssh_user }}"
    group: docker

- name: Copy required packages
  ansible.builtin.copy:
    src: "files/{{ item }}"
    dest: "/tmp/"
    mode: 0755
  with_items:
    - "{{ docker_required_deb_packages_filename }}"
    - "{{ python3_required_libs_filename }}"

- name: Install required packages using apt
  become: true
  ansible.builtin.apt:
    deb: "/tmp/{{ item }}"
    state: present
  with_items: "{{ docker_required_deb_packages_filename }}"

- name: Install Docker py using pip
  become: true
  ansible.builtin.pip:
    executable: pip
    state: present
    name:
      - file:///tmp/{{ item }}
  with_items: "{{ python3_required_libs_filename }}"

- name: Cleanup temporary files
  ansible.builtin.file:
    path: "/tmp/{{ item }}"
    state: absent
  with_items:
    - "{{ docker_required_deb_packages_filename }}"
    - "{{ python3_required_libs_filename }}"
