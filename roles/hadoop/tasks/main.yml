---
# tasks file for hadoop
- name: Define hadoop_listen_ip
  ansible.builtin.set_fact:
    hadoop_listen_ip: "{{ __hadoop_listen_ip }}"
  when: hadoop_listen_ip is not defined

- name: Create service account for Apache Hadoop
  become: true
  ansible.builtin.user:
    name: "hadoop"
    home: "/home/hadoop"
    shell: "/bin/bash"
    state: present
    generate_ssh_key: true

- name: Set authorized key taken from file
  become: true
  become_user: hadoop
  ansible.builtin.shell:
    cmd: cat /home/hadoop/.ssh/id_rsa.pub > /home/hadoop/.ssh/authorized_keys

- name: Copy JDK Archive
  ansible.builtin.copy:
    src: "files/{{ jdk_archive_filename }}"
    dest: "/tmp/"
    mode: 0644

- name: Ensure jdk directory exists
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    mode: 0775
    state: directory
    owner: "hadoop"
    group: "hadoop"
  with_items:
    - "/opt/jdk"
    - "/opt/hadoop"

- name: Extract JDK distribution
  become: true
  ansible.builtin.unarchive:
    src: "/tmp/{{ jdk_archive_filename }}"
    dest: "/opt/jdk"
    creates: "/opt/jdk/bin"
    copy: false
    owner: "hadoop"
    group: "hadoop"
    extra_opts: [--strip-components=1]

- name: Copy Hadoop Archive
  ansible.builtin.copy:
    src: "files/{{ hadoop_archive_filename }}"
    dest: "/tmp/"
    mode: 0644

- name: Extract Hadoop distribution
  become: true
  ansible.builtin.unarchive:
    src: "/tmp/{{ hadoop_archive_filename }}"
    dest: "/opt/hadoop"
    creates: "/opt/hadoop/etc"
    copy: false
    owner: "hadoop"
    group: "hadoop"
    extra_opts: [--strip-components=1]

- name: Configure hadoop-env.sh file
  become: true
  ansible.builtin.template:
    src: "./hadoop-env.sh.j2"
    dest: "/opt/hadoop/etc/hadoop/hadoop-env.sh"
    mode: 0755

- name: Configure core-site.xml file
  become: true
  ansible.builtin.template:
    src: "./core-site.xml.j2"
    dest: "/opt/hadoop/etc/hadoop/core-site.xml"
    mode: 0755

- name: Configure hdfs-site.xml file
  become: true
  ansible.builtin.template:
    src: "./hdfs-site.xml.j2"
    dest: "/opt/hadoop/etc/hadoop/hdfs-site.xml"
    mode: 0755

- name: Stop Hadoop service
  become: true
  ansible.builtin.shell:
    cmd: /opt/hadoop/sbin/stop-dfs.sh

- name: Remove hadoop_data folder
  become: true
  ansible.builtin.file:
    path: /home/hadoop/hadoop_data
    state: absent

- name: Ensure folder logs exist
  become: true
  # become_user: hadoop
  ansible.builtin.file:
    path: "/opt/hadoop/logs"
    mode: 0775
    state: directory
    owner: "hadoop"
    group: "hadoop"

# - name: Pause for 1 minute to build app cache
#   ansible.builtin.pause:
#     minutes: 1

- name: Format a Hadoop Namenode
  become: true
  become_user: hadoop
  ansible.builtin.shell:
    cmd: /opt/hadoop/bin/hdfs namenode -format

- name: Start Hadoop service
  become: true
  become_user: hadoop
  ansible.builtin.shell:
    cmd: /opt/hadoop/sbin/start-dfs.sh

- name: Copy Kaspacore related file to machine
  ansible.builtin.copy:
    src: "files/{{ item }}"
    dest: "/tmp/"
    mode: 0644
  with_items:
    - "kaspacore.jar"
    - "GeoLite2-City.mmdb"

- name: Pause for 2 minute to wait hadoop starting up
  ansible.builtin.pause:
    minutes: 2

- name: Create Hadoop needed directory
  become: true
  become_user: hadoop
  ansible.builtin.shell:
    cmd: "{{ item }}"
  with_items:
    - "/opt/hadoop/bin/hdfs dfs -mkdir -p hdfs://localhost:9000/user/hadoop/kaspa-checkpoint"
    - "/opt/hadoop/bin/hdfs dfs -mkdir -p hdfs://localhost:9000/user/hadoop/file/maxmind"

- name: Upload GeoLite2-City Maxmind Geo Database
  become: true
  become_user: hadoop
  ansible.builtin.shell:
    cmd: "{{ item }}"
  with_items:
    - "/opt/hadoop/bin/hdfs dfs -put /tmp/GeoLite2-City.mmdb /user/hadoop/file/maxmind"
    - "/opt/hadoop/bin/hdfs dfs -put /tmp/kaspacore.jar /user/hadoop/file"
