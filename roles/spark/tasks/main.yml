# code language=ansible
---
# tasks file for ansible-role-spark
- name: Create service account for Apache Spark
  ansible.builtin.user:
    name: "{{ spark_user }}"
    home: "{{ spark_lib_dir }}"
    shell: "{{ spark_user_shell }}"
    state: present
    groups: "{{ spark_user_groups | join(',') }}"
  tags: ["create-spark-user"]

- name: Install openjdk
  ansible.builtin.package:
    name: openjdk-8-jdk
    state: present

- name: Ensure Apache Spark configuration directory exists
  ansible.builtin.file:
    path: "{{ spark_conf_dir }}"
    state: directory
    mode: 0775

- name: Ensure Apache Spark log, tmp and pid directories exists
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ spark_user }}"
    group: "{{ spark_user }}"
    mode: 0775
    state: directory
  with_items:
    - "{{ spark_log_dir }}"
    - "{{ spark_pid_dir }}"
    - "{{ spark_tmp_dir }}"

- name: Ensure Spark install directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    mode: 0755
    state: directory
    follow: true
  with_items:
    - "{{ spark_src_dir }}"

- name: Download Apache Spark distribution
  when: spark_download_over_internet
  ansible.builtin.get_url:
    url: "{{ spark_mirror }}"
    dest: "{{ role_path }}/files/{{ spark_archive_filename }}"
    checksum: "{{ spark_mirror_checksum if (spark_download_check_checksum) else '' }}"
    mode: 775
  delegate_to: 127.0.0.1

- name: Copy Apache Spark Archive
  ansible.builtin.copy:
    src: "{{ role_path }}/files/{{ spark_archive_filename }}"
    dest: "{{ spark_src_dir }}/{{ spark_archive_filename }}"
    mode: 0644

- name: Extract Spark distribution
  ansible.builtin.unarchive:
    src: "{{ spark_src_dir }}/{{ spark_archive_filename }}"
    dest: "{{ spark_usr_parent_dir }}"
    copy: no
    owner: "{{ spark_user }}"
    group: "{{ spark_user }}"
    creates: "{{ spark_usr_parent_dir }}/{{ spark_directory_name }}"

- name: Setup Apache Spark distribution symlinks
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  with_items:
    - { src: "{{ spark_usr_parent_dir }}/{{ spark_directory_name }}", dest: "{{ spark_usr_dir }}" }
  when: spark_symlinks_enabled

- name: Configure Spark environment
  ansible.builtin.template: 
    src: spark-env.sh.j2
    dest: "{{ spark_usr_dir }}/conf/spark-env.sh"
    mode: 0755

- name: Configure Spark defaults config
  ansible.builtin.template: 
    src: spark-defaults.conf.j2
    dest: "{{ spark_conf_dir }}/spark-defaults.conf"
    mode: 0755

- name: Configure Spark log4j properties
  ansible.builtin.template: 
    src: log4j.properties.j2
    dest: "{{ spark_conf_dir }}/log4j.properties"
    mode: 0755

- name: Configure Spark master service
  ansible.builtin.template: 
    src: spark-master.service.j2
    dest: "/etc/systemd/system/spark-master.service"
    mode: 0755
  tags: ["services"]
  when: inventory_hostname in groups['spark-master']

- name: Configure Spark worker service
  ansible.builtin.template: 
    src: spark-slave.service.j2
    dest: "/etc/systemd/system/spark-slave.service"
    mode: 0755
  tags: ["services"]
  when: inventory_hostname in groups['spark-worker']

- name: Run daemon reload
  ansible.builtin.service:
    daemon_reload: yes

- name: Start Spark Master
  ansible.builtin.service:
    name: spark-master.service
    state: started
  when: inventory_hostname in groups['spark-master']

- name: Start Spark worker
  ansible.builtin.service:
    name: spark-slave.service
    state: started
  when: inventory_hostname in groups['spark-worker']
